{"mappings":";;;;;;;;;;AAAA,MAAM,gCAAU,CAAC;;;;;;AAMjB,CAAC;AAED,MAAM,uCAAiB,CAAC;IACpB,MAAM,QAAQ,UAAU;IACxB,MAAM,iBAAiB,UAAU,cAAc,cAAc;IAE7D,IAAI,CAAC,gBACD,UAAU,cAAc,mBAAmB,cAAc;SAEzD,eAAe,cAAc,2BAA2B,YAAY;AAE5E;AAEA,MAAM,oCAAc,CAAC,OAAO,WAAW,OAAO;IAC1C,IAAI,SAAS,OAAO;QAChB,IAAI,MAAM,UACN,UAAU,IAAI;QAGlB,IAAI,MAAM,UACN,MAAM,UAAU,IAAI;QAGxB,IAAI,MAAM,MAAM,OAAO,SAAS,GAAG;YAC/B,UAAU,IAAI;YACd,MAAM,QAAQ,AAAE,CAAA,MAAM,cAAc,EAAC,IAAK,MAAO;QACrD;QAEA,MAAM,iBAAiB,SAAS;YAC5B,UAAU,IAAI;YACd,MAAM,QAAQ,AAAE,CAAA,MAAM,cAAc,EAAC,IAAK,MAAO;QACrD;QAEA,MAAM,iBAAiB,QAAQ;YAC3B,UAAU,OAAO;YAEjB,IAAI,MAAM,MAAM,OAAO,UAAU,KAAK,OAClC,MAAM,QAAQ;QAEtB;QAEA,MAAM,iBAAiB,SAAS;YAC3B,MAAM,MAAM,OAAO,SAAS,IAAK,UAAU,IAAI,mBAAmB,UAAU,OAAO;QACxF;IACJ;AACJ;AAEA,MAAM,uCAAiB,CAAC,UAAU,WAAW,OAAO;IAChD,IAAI,YAAY,OAAO;QACnB,IAAI,SAAS,UACT,UAAU,IAAI;QAGlB,IAAI,SAAS,UACT,MAAM,UAAU,IAAI;QAGxB,IAAI,SAAS,MAAM,OAAO,SAAS,GAAG;YAClC,UAAU,IAAI;YACd,MAAM,QAAQ,AAAE,CAAA,MAAM,cAAc,EAAC,IAAK,MAAO;QACrD;QAEA,SAAS,iBAAiB,SAAS;YAC/B,UAAU,IAAI;YACd,MAAM,QAAQ,AAAE,CAAA,MAAM,cAAc,EAAC,IAAK,MAAO;QACrD;QAEA,SAAS,iBAAiB,QAAQ;YAC9B,UAAU,OAAO;YAEjB,IAAI,SAAS,MAAM,OAAO,UAAU,KAAK,OACrC,MAAM,QAAQ;QAEtB;QAEA,SAAS,iBAAiB,UAAU;YAC/B,SAAS,MAAM,OAAO,SAAS,IAAK,UAAU,IAAI,sBAAsB,UAAU,OAAO;QAC9F;QAEA,SAAS,iBAAiB,SAAS;YAC/B,IAAI,UAAU,SAAS,8BAA8B;gBACjD,SAAS,MAAM,SAAS;gBACxB,SAAS,MAAM,SAAS,AAAC,SAAS,eAAgB;YACtD;QACJ;IACJ;AACJ;AAEA,MAAM,8BAAQ;IACV,MAAM,SAAS,SAAS,iBAAiB;IAEzC,KAAK,IAAI,SAAS,OAAQ;QACtB,MAAM,QAAQ,MAAM;QAEpB,IAAI,CAAC,OAAO;QAEZ,qCAAe;QACf,MAAM,aAAE,UAAS,EAAE,GAAG,MAAM;QAC5B,MAAM,SAAE,MAAK,EAAE,GAAG,MAAM;QACxB,kCAAY,OAAO,WAAW,OAAO;IACzC;AACJ;AAEA,MAAM,iCAAW;IACb,MAAM,YAAY,SAAS,iBAAiB;IAE5C,KAAK,IAAI,YAAY,UAAW;QAC5B,MAAM,QAAQ,SAAS;QAEvB,IAAI,CAAC,OAAO;QAEZ,qCAAe;QACf,MAAM,aAAE,UAAS,EAAE,GAAG,SAAS;QAC/B,MAAM,SAAE,MAAK,EAAE,GAAG,MAAM;QACxB,qCAAe,UAAU,WAAW,OAAO;IAC/C;AACJ;IAEA,2CAAe;WACX;cACA;AACJ","sources":["src/index.js"],"sourcesContent":["const notched = `\r\n    <div class=\"notched-outline\">\r\n        <div class=\"notched-outline__leading\"></div>\r\n        <div class=\"notched-outline__notch\"></div>\r\n        <div class=\"notched-outline__trailing\"></div>\r\n    </div>\r\n`\r\n\r\nconst customizeLabel = (textField) => {\r\n    const label = textField.previousElementSibling\r\n    const notchedOutline = textField.parentElement.querySelector('.notched-outline')\r\n\r\n    if (!notchedOutline) {\r\n        textField.parentElement.insertAdjacentHTML('afterbegin', notched)\r\n    } else {\r\n        notchedOutline.querySelector('.notched-outline__notch').appendChild(label)\r\n    }\r\n}\r\n\r\nconst handleInput = (input, classList, label, style) => {\r\n    if (input && label) {\r\n        if (input.disabled) {\r\n            classList.add('input--disabled')\r\n        }\r\n\r\n        if (input.required) {\r\n            label.classList.add('floating-label--required')\r\n        }\r\n\r\n        if (input.value.trim().length > 0) {\r\n            classList.add('input--filled')\r\n            style.width = ((label.clientWidth + 13) * .75) + 'px'\r\n        }\r\n\r\n        input.addEventListener('focus', () => {\r\n            classList.add('input--focused')\r\n            style.width = ((label.clientWidth + 13) * .75) + 'px'\r\n        })\r\n\r\n        input.addEventListener('blur', () => {\r\n            classList.remove('input--focused')\r\n\r\n            if (input.value.trim().length <= 0 && label) {\r\n                style.width = 'auto'\r\n            }\r\n        })\r\n\r\n        input.addEventListener('input', () => {\r\n            (input.value.trim().length > 0) ? classList.add('input--filled') : classList.remove('input--filled')\r\n        })\r\n    }\r\n}\r\n\r\nconst handleTextarea = (textarea, classList, label, style) => {\r\n    if (textarea && label) {\r\n        if (textarea.disabled) {\r\n            classList.add('textarea--disabled')\r\n        }\r\n\r\n        if (textarea.required) {\r\n            label.classList.add('floating-label--required')\r\n        }\r\n\r\n        if (textarea.value.trim().length > 0) {\r\n            classList.add('textarea--filled')\r\n            style.width = ((label.clientWidth + 13) * .75) + 'px'\r\n        }\r\n\r\n        textarea.addEventListener('focus', () => {\r\n            classList.add('textarea--focused')\r\n            style.width = ((label.clientWidth + 13) * .75) + 'px'\r\n        })\r\n\r\n        textarea.addEventListener('blur', () => {\r\n            classList.remove('textarea--focused')\r\n\r\n            if (textarea.value.trim().length <= 0 && label) {\r\n                style.width = 'auto'\r\n            }\r\n        })\r\n\r\n        textarea.addEventListener('change', () => {\r\n            (textarea.value.trim().length > 0) ? classList.add('textarea--filled') : classList.remove('textarea--filled')\r\n        })\r\n\r\n        textarea.addEventListener('input', () => {\r\n            if (classList.contains('textarea--auto-resizeable')) {\r\n                textarea.style.height = 'auto'\r\n                textarea.style.height = (textarea.scrollHeight) + 'px'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nconst input = () => {\r\n    const inputs = document.querySelectorAll('.input input')\r\n\r\n    for (let input of inputs) {\r\n        const label = input.previousElementSibling\r\n\r\n        if (!label) return\r\n\r\n        customizeLabel(input)\r\n        const { classList } = input.parentNode\r\n        const { style } = label.parentNode\r\n        handleInput(input, classList, label, style)\r\n    }\r\n}\r\n\r\nconst textarea = () => {\r\n    const textareas = document.querySelectorAll('.textarea textarea')\r\n\r\n    for (let textarea of textareas) {\r\n        const label = textarea.previousElementSibling\r\n\r\n        if (!label) return\r\n\r\n        customizeLabel(textarea)\r\n        const { classList } = textarea.parentNode\r\n        const { style } = label.parentNode\r\n        handleTextarea(textarea, classList, label, style)\r\n    }\r\n}\r\n\r\nexport default {\r\n    input,\r\n    textarea\r\n}"],"names":[],"version":3,"file":"index.js.map"}